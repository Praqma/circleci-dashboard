defaults: &defaults
  docker:
    - image: circleci/node:8.10.0

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - build
  unit-tests:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test
  end-to-end-tests:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test
  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run lint
  deploy-github:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install and configure dependencies
          command: sudo npm install -g gh-pages
      - run:
          name: Setting git email
          command: git config user.email "$GH_EMAIL"
      - run:
          name: Setting git name
          command: git config user.name "$GH_NAME"
      - run:
          name: Deploy to gh-pages branch
          command: gh-pages --dist build/ --message "Deploy to GitHub pages"

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - prepare:
          filters:
            branches:
              ignore:
                - gh-pages
      - lint:
          requires:
            - prepare
      - build:
          requires:
            - lint
      - unit-tests:
          requires:
            - build
      - end-to-end-tests:
          requires:
            - build
      - deploy-github:
          filters:
            branches:
              only:
                - master # Only the master branch is deployed
          requires:
            - unit-tests
            - end-to-end-tests
